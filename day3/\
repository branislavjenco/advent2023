from dataclasses import dataclass
from utils import file_into_list, file_into_string, test

@dataclass
class Pos:
    row: int
    span: list


@dataclass
class Number:
    value: int
    position: Pos

@dataclass
class Symbol:
    value: str
    position: Pos



def part1(_inp):
    numbers = []
    symbols = []
    for row, line in enumerate(_inp):
        buf = ""
        for col, ch in enumerate(line):
            if ch.isnumeric():
                buf = buf + ch
            else:
                if len(buf)>0:
                    n = Number(int(buf), Pos(row, list(range(col-len(buf), col-1))))
                    numbers.append(n)
                    buf = ""
                if ch != ".":
                    s = Symbol(ch, Pos(row, [col]))

    print(numbers, symbols)


test_input = file_into_list("day2/test_input1.txt")
expected = int(file_into_string("day2/test_output1.txt"))
test(part1, [test_input], [expected])

real_input = file_into_list("day2/input.txt")
print(part1(real_input))



def part2(_inp):
    pass


#test_input = file_into_list("day2/test_input2.txt")
#expected = int(file_into_string("day2/test_output2.txt"))
#test(part2, [test_input], [expected])
#
#real_input = file_into_list("day2/input.txt")
#print(part2(real_input))
